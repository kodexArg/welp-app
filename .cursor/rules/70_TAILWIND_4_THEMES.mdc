---
alwaysApply: false
---

Comienza la siguiente guía **taxativa y definitiva** para implementar el theme switch usando `data-theme` en **Tailwind CSS 4.1**, con referencias oficiales y ejemplos concretos:

---
# Referencias importantes:
@Web https://simonswiss.com/posts/tailwind-v4-multi-theme
@web https://dev.to/praveen-sripati/how-i-built-a-multi-theme-system-using-new-tailwind-css-v4-react-27j3
@web https://www.jbukuts.com/posts/theming-tailwind-v4

## 1. `/frontend/css/themes.css` — declarar variables de tema

```css
@import "tailwindcss";

/* tokens que generarán utilidades como bg-primary, text-secondary, bg-bg, text-text */
@theme inline {
  --color-primary: var(--primary);
  --color-secondary: var(--secondary);
  --color-bg: var(--background);
  --color-text: var(--text);
}
```

* `@theme inline` es parte del sistema oficial de Tailwind 4.1 y permite mapear tus variables CSS a utilidades automáticas ([github.com][1], [tailwindcss.com][2]).

---

## 2. `/frontend/css/variables.css` — definir valores por theme

```css
:root {
  /* theme app (valor por defecto) */
  --primary: 0 122 204;
  --secondary: 45 55 72;
  --background: 17 24 39;
  --text: 241 245 249;
}

[data-theme="payflow"] {
  --primary: 34 197 94;
  --secondary: 21 128 61;
  --background: 20 83 45;
  --text: 240 253 244;
}

[data-theme="desk"] {
  --primary: 14 165 233;
  --secondary: 37 99 235;
  --background: 224 242 254;
  --text: 15 23 42;
}
```

* `:root` establece el theme “app” por defecto.
* Alternativas via `data-theme="payflow"` o `="desk"`, según corresponda.

---

## 3. HTML / templates — aplicar el theme activo

```html
<html lang="es" data-theme="{{ theme }}">
  <body class="bg-bg text-text">
    <button class="bg-primary text-white hover:bg-secondary py-2 px-4 rounded">
      Acción Principal
    </button>
    <div class="p-4 bg-primary text-white">
      Bloque con estilos del theme activo
    </div>
  </body>
</html>
```

* `{{ theme }}`: debe ser `'app'`, `'payflow'` o `'desk'`, gestionado por backend (Django/uv/vite) o frontend.

---

## 4. (Opcional) JavaScript para cambio dinámico

```js
(function(){
  const params = new URLSearchParams(location.search);
  const theme = params.get('theme') ||
                document.cookie.match(/theme=(\w+)/)?.[1] ||
                'app';
  document.documentElement.setAttribute('data-theme', theme);
  document.cookie = `theme=${theme};path=/;max-age=${3600*24*30}`;
})();
```

* Detecta theme en URL (`?theme=desk`), cookie, o por defecto usa `app`.
* Actualiza `data-theme` sin recargar página y persiste en cookie.

---

## 5. Referencias oficiales de Tailwind 4.1

* **Sistema de variables `@theme`**: [https://tailwindcss.com/docs/theme](https://tailwindcss.com/docs/theme) ([github.com][1])
* **Uso de variantes con `data-theme` (dark mode)**: [https://tailwindcss.com/docs/dark-mode](https://tailwindcss.com/docs/dark-mode) ([tailwindcss.com][3])
* **Requisitos de `inline` en `@theme` para scopes dinámicos**: discusión oficial ([github.com][4])

---

## 6. Ejemplos concretos en **welp-app**

### a) Theme por defecto “app” (data-theme ausente o `app`)

```html
<html data-theme="app">
  <div class="bg-primary text-text p-6">
    Botón azul sobre fondo oscuro
  </div>
</html>
```

### b) Theme “payflow”

```html
<html data-theme="payflow">
  <div class="bg-primary text-white p-6">
    Botón verde sobre fondo verde suave
  </div>
</html>
```

### c) Theme “desk”

```html
<html data-theme="desk">
  <div class="bg-primary text-text p-6">
    Botón celeste sobre fondo celeste claro
  </div>
</html>
```

### d) Cambio en tiempo real via JS

```html
<html>
  <body>
    <button onclick="document.documentElement.setAttribute('data-theme','desk')">
      Cambiar a desk
    </button>
  </body>
</html>
```

---

Con estas instrucciones claras, sin referencias a otros métodos, tu implementación del theme-switch en **welp-app** será completamente funcional, eficiente y alineada con las prácticas oficiales de Tailwind 4.1.

[1]: https://github.com/tailwindlabs/tailwindcss/discussions/16292?utm_source=chatgpt.com "How to target @theme properties with a data-theme attribute #16292"
[2]: https://tailwindcss.com/docs/theme?utm_source=chatgpt.com "Theme variables - Core concepts - Tailwind CSS"
[3]: https://tailwindcss.com/docs/dark-mode?utm_source=chatgpt.com "Dark mode - Core concepts - Tailwind CSS"
[4]: https://github.com/tailwindlabs/tailwindcss/discussions/15600?utm_source=chatgpt.com "[v4] Best method to use CSS variables for multiple themes? #15600"
